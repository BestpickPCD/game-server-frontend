{"version":3,"file":"static/js/739.9a5085aa.chunk.js","mappings":"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","sources":["components/Footer/index.tsx","content/applications/Users/update/PasswordUpdate.tsx","content/applications/Users/update/index.tsx","../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/CardHeader/CardHeader.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["import { Box, Container, Typography, styled } from '@mui/material';\nimport { FormattedMessage } from 'react-intl';\n\nconst FooterWrapper = styled(Container)(\n  ({ theme }) => `\n        margin-top: ${theme.spacing(4)};\n`\n);\n\nconst Footer = (): JSX.Element => (\n  <FooterWrapper className=\"footer-wrapper\">\n    <Box\n      pb={4}\n      display={{ xs: 'block', md: 'flex' }}\n      alignItems=\"center\"\n      textAlign={{ xs: 'center', md: 'left' }}\n      justifyContent=\"space-between\"\n    >\n      <Box>\n        <Typography variant=\"subtitle1\">\n          &copy;\n          <FormattedMessage id=\"footer.admin\" />\n        </Typography>\n      </Box>\n      <Typography\n        sx={{\n          pt: { xs: 2, md: 0 }\n        }}\n        variant=\"subtitle1\"\n      >\n        Crafted by BestPick Technology\n      </Typography>\n    </Box>\n  </FooterWrapper>\n);\n\nexport default Footer;\n","import {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  TextField\n} from '@mui/material';\nimport { ResponseMessage } from 'src/models';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router';\nimport { useUpdatePasswordMutation } from 'src/services/userService';\nimport { useToast } from 'src/utils/hooks';\nimport * as yup from 'yup';\nimport { LoadingButton } from '@mui/lab';\n\nconst schema = yup.object().shape({\n  oldPassword: yup.string().required('Password is required'),\n  password: yup.string().required('Password is required'),\n  confirmPassword: yup.string().required('Password is required')\n});\n\nconst passwordUpdate = (): JSX.Element => {\n  const [updatePassword, { isLoading }] = useUpdatePasswordMutation();\n  const { notify, message } = useToast();\n  const navigate = useNavigate();\n\n  const defaultValues = {\n    oldPassword: '',\n    password: '',\n    confirmPassword: ''\n  };\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors }\n  } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues // Use the updated defaultValues here\n  });\n\n  const onSubmit = async (values) => {\n    try {\n      const response = await updatePassword(values).unwrap();\n      if (response.message === 'SUCCESS') {\n        reset();\n        notify({ message: 'update Successfully' });\n        navigate('/dashboards');\n      }\n    } catch (error) {\n      if ((error.data.message as ResponseMessage) === 'NOT_FOUND') {\n        return notify({\n          message: 'password is not correct',\n          type: 'error'\n        });\n      }\n      return notify({ message: message.ERROR, type: 'error' });\n    }\n  };\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        noValidate\n        onSubmit={handleSubmit(onSubmit)}\n        sx={{ mt: 1 }}\n      >\n        <Card>\n          <Divider />\n          <CardHeader title={'Change Password'} />\n          <Divider />\n          <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 350 }} aria-label=\"simple table\">\n              <TableBody>\n                <TableRow\n                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                >\n                  <TableCell align=\"left\">\n                    <TextField\n                      type=\"text\"\n                      fullWidth\n                      label=\"Old Password\"\n                      name=\"oldPassword\"\n                      required\n                      {...register('oldPassword')}\n                      autoComplete=\"off\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow\n                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                >\n                  <TableCell align=\"left\">\n                    <TextField\n                      type=\"password\"\n                      fullWidth\n                      label=\"New Passoword\"\n                      name=\"password\"\n                      required\n                      {...register('password')}\n                      autoComplete=\"off\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow\n                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                >\n                  <TableCell align=\"left\">\n                    <TextField\n                      type=\"password\"\n                      fullWidth\n                      label=\"Confirm Password\"\n                      name=\"confirmPassword\"\n                      required\n                      {...register('confirmPassword')}\n                      autoComplete=\"off\"\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow\n                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                >\n                  <TableCell align=\"left\">\n                    <LoadingButton\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"outlined\"\n                      loading={isLoading}\n                    >\n                      {'Update'}\n                    </LoadingButton>\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Card>\n      </Box>\n    </>\n  );\n};\n\nexport default passwordUpdate;\n","import { Helmet } from 'react-helmet-async';\nimport Footer from 'src/components/Footer';\n\nimport { Grid, Container } from '@mui/material';\n\nimport PasswordUpdate from './PasswordUpdate';\nimport { useGetDashboardQuery } from 'src/services/userService';\n\nexport interface UserDashboard {\n  id: number;\n  name: string;\n  username: string;\n  currency: {\n    name: string;\n    code: string;\n  };\n  type: string;\n  subAgent: number;\n  parentAgentId: number;\n  balance: {\n    balance: number;\n    calculatedBalance: number;\n    sendOut: number;\n    receive: number;\n    bet: number;\n    charge: number;\n  };\n  avatar: string;\n  jobTitle: string;\n  coverImg: string;\n}\n\nconst ManagementUserProfile = (): JSX.Element => {\n  const { data } = useGetDashboardQuery({ refetchOnMountOrArgChange: true });\n  console.log(data);\n  const user: UserDashboard = {\n    id: data?.userId,\n    name: data?.name,\n    username: data?.username,\n    currency: data?.currency,\n    type: data?.type,\n    subAgent: data?.subAgent,\n    parentAgentId: data?.parentAgentId,\n    balance: data?.balance,\n    avatar: '/static/images/avatars/4.jpg',\n    jobTitle: data?.type,\n    coverImg: '/static/images/placeholders/covers/5.jpg'\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Password - update</title>\n      </Helmet>\n      <Container sx={{ mt: 3 }} maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12} md={7}>\n            <PasswordUpdate />\n          </Grid>\n        </Grid>\n      </Container>\n      <Footer />\n    </>\n  );\n};\n\nexport default ManagementUserProfile;\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n  const {\n      action,\n      avatar,\n      className,\n      component = 'div',\n      disableTypography = false,\n      subheader: subheaderProp,\n      subheaderTypographyProps,\n      title: titleProp,\n      titleTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n  let subheader = subheaderProp;\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["FooterWrapper","styled","Container","_ref","theme","concat","spacing","_jsx","className","children","_jsxs","Box","pb","display","xs","md","alignItems","textAlign","justifyContent","Typography","variant","FormattedMessage","id","sx","pt","schema","yup","shape","oldPassword","required","password","confirmPassword","_useUpdatePasswordMut","useUpdatePasswordMutation","_useUpdatePasswordMut2","_slicedToArray","updatePassword","isLoading","_useToast","useToast","notify","message","navigate","useNavigate","_useForm","useForm","resolver","yupResolver","defaultValues","register","handleSubmit","reset","onSubmit","formState","errors","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","unwrap","sent","t0","data","abrupt","type","ERROR","stop","_x","apply","arguments","_Fragment","component","noValidate","mt","Card","Divider","CardHeader","title","TableContainer","Paper","Table","minWidth","TableBody","TableRow","border","TableCell","align","TextField","_objectSpread","fullWidth","label","name","autoComplete","LoadingButton","loading","useGetDashboardQuery","refetchOnMountOrArgChange","console","log","userId","username","currency","subAgent","parentAgentId","balance","Helmet","maxWidth","Grid","container","direction","item","PasswordUpdate","Footer","getCardHeaderUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardHeaderRoot","overridesResolver","props","styles","_extends2","_extends","_defineProperty","cardHeaderClasses","subheader","root","padding","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","action","alignSelf","marginTop","marginBottom","CardHeaderContent","content","React","inProps","ref","useThemeProps","_props$component","_props$disableTypogra","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","color","clsx","as","getCardUtilityClass","CardRoot","overflow","_props$raised","raised","elevation","undefined"],"sourceRoot":""}