{"version":3,"file":"static/js/322.4fe822c5.chunk.js","mappings":"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","sources":["components/Footer/index.tsx","components/PageTitleWrapper/index.tsx","content/dashboards/Crypto/PageHeader.tsx","content/dashboards/Crypto/AccountBalance.tsx","content/dashboards/Crypto/index.tsx","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["import { Box, Container, Typography, styled } from '@mui/material';\nimport { FormattedMessage } from 'react-intl';\n\nconst FooterWrapper = styled(Container)(\n  ({ theme }) => `\n        margin-top: ${theme.spacing(4)};\n`\n);\n\nconst Footer = (): JSX.Element => (\n  <FooterWrapper className=\"footer-wrapper\">\n    <Box\n      pb={4}\n      display={{ xs: 'block', md: 'flex' }}\n      alignItems=\"center\"\n      textAlign={{ xs: 'center', md: 'left' }}\n      justifyContent=\"space-between\"\n    >\n      <Box>\n        <Typography variant=\"subtitle1\">\n          &copy;\n          <FormattedMessage id=\"footer.admin\" />\n        </Typography>\n      </Box>\n      <Typography\n        sx={{\n          pt: { xs: 2, md: 0 }\n        }}\n        variant=\"subtitle1\"\n      >\n        Crafted by BestPick Technology\n      </Typography>\n    </Box>\n  </FooterWrapper>\n);\n\nexport default Footer;\n","import { Box, Container, styled } from '@mui/material';\nimport { ReactNode } from 'react';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4)};\n`\n);\n\ninterface PageTitleWrapperProps {\n  children?: ReactNode;\n}\n\nconst PageTitleWrapper = ({ children }: PageTitleWrapperProps): JSX.Element => (\n  <PageTitle className=\"MuiPageTitle-wrapper\">\n    <Container maxWidth=\"lg\">{children}</Container>\n  </PageTitle>\n);\nexport default PageTitleWrapper;\n","import { Typography, Avatar, Grid } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { useGetDashboardQuery } from 'src/services/userService';\n\nconst PageHeader = (): JSX.Element => {\n  const { data } = useGetDashboardQuery(\n    {},\n    { refetchOnMountOrArgChange: true }\n  );\n\n  const theme = useTheme();\n\n  return (\n    <Grid container alignItems=\"center\">\n      <Grid item>\n        <Avatar\n          sx={{\n            mr: 2,\n            width: theme.spacing(8),\n            height: theme.spacing(8)\n          }}\n          variant=\"rounded\"\n          alt={data?.name}\n          src={'/static/images/avatars/1.jpg'}\n        />\n      </Grid>\n      <Grid item>\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n          Welcome, {data?.name}\n        </Typography>\n        <Typography variant=\"subtitle2\">{data?.type}</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default PageHeader;\n","import {\n  Button,\n  Card,\n  Box,\n  Grid,\n  Typography,\n  useTheme,\n  styled,\n  Avatar,\n  Divider,\n  alpha,\n  ListItem,\n  ListItemText,\n  List,\n  ListItemAvatar\n} from '@mui/material';\nimport TrendingUp from '@mui/icons-material/TrendingUp';\nimport Chart from 'react-apexcharts';\nimport type { ApexOptions } from 'apexcharts';\nimport { useGetDashboardQuery } from 'src/services/userService';\nimport { useEffect, useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nconst AvatarSuccess = styled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.success.main};\n      color: ${theme.palette.success.contrastText};\n      width: ${theme.spacing(8)};\n      height: ${theme.spacing(8)};\n      box-shadow: ${theme.colors.shadows.success};\n`\n);\n\nconst ListItemAvatarWrapper = styled(ListItemAvatar)(\n  ({ theme }) => `\n  min-width: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: ${theme.spacing(1)};\n  padding: ${theme.spacing(0.5)};\n  border-radius: 60px;\n  background: ${\n    theme.palette.mode === 'dark'\n      ? theme.colors.alpha.trueWhite[30]\n      : alpha(theme.colors.alpha.black[100], 0.07)\n  };\n\n  img {\n    background: ${theme.colors.alpha.trueWhite[100]};\n    padding: ${theme.spacing(0.5)};\n    display: block;\n    border-radius: inherit;\n    height: ${theme.spacing(4.5)};\n    width: ${theme.spacing(4.5)};\n  }\n`\n);\n\nconst AccountBalance = (): JSX.Element => {\n  const theme = useTheme();\n\n  const { data } = useGetDashboardQuery({ refetchOnMountOrArgChange: true });\n  const chartOptions: ApexOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: false,\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {\n      pie: {\n        donut: {\n          size: '60%'\n        }\n      }\n    },\n    colors: ['#ff9900', '#1c81c2', '#333', '#5c6ac0'],\n    dataLabels: {\n      enabled: true,\n      formatter: function (val) {\n        return val + '%';\n      },\n      style: {\n        colors: [theme.colors.alpha.trueWhite[100]]\n      },\n      background: {\n        enabled: true,\n        foreColor: theme.colors.alpha.trueWhite[100],\n        padding: 8,\n        borderRadius: 4,\n        borderWidth: 0,\n        opacity: 0.3,\n        dropShadow: {\n          enabled: true,\n          top: 1,\n          left: 1,\n          blur: 1,\n          color: theme.colors.alpha.black[70],\n          opacity: 0.5\n        }\n      },\n      dropShadow: {\n        enabled: true,\n        top: 1,\n        left: 1,\n        blur: 1,\n        color: theme.colors.alpha.black[50],\n        opacity: 0.5\n      }\n    },\n    fill: {\n      opacity: 1\n    },\n    labels: ['Bitcoin', 'Ripple', 'Cardano', 'Ethereum'],\n    legend: {\n      labels: {\n        colors: theme.colors.alpha.trueWhite[100]\n      },\n      show: false\n    },\n    stroke: {\n      width: 0\n    },\n    theme: {\n      mode: theme.palette.mode\n    }\n  };\n\n  const chartSeries = [10, 20, 25, 45];\n\n  return (\n    <Card>\n      <Grid spacing={0} container>\n        <Grid item xs={12} md={6}>\n          <Box p={4}>\n            <Typography\n              sx={{\n                pb: 3\n              }}\n              variant=\"h4\"\n            >\n              <FormattedMessage id=\"label.account-balance\" />\n            </Typography>\n            <Box>\n              <Typography variant=\"h1\" gutterBottom>\n                {data?.balance.balance} {data?.currency.code}\n              </Typography>\n              <Typography\n                variant=\"h4\"\n                fontWeight=\"normal\"\n                color=\"text.secondary\"\n              >\n                {data?.balance.balance} {data?.currency.code}\n              </Typography>\n              {/* <Box\n                display=\"flex\"\n                sx={{\n                  py: 4\n                }}\n                alignItems=\"center\"\n              >\n                <AvatarSuccess\n                  sx={{\n                    mr: 2\n                  }}\n                  variant=\"rounded\"\n                >\n                  <TrendingUp fontSize=\"large\" />\n                </AvatarSuccess>\n                <Box>\n                  <Typography variant=\"h4\">+ $3,594.00</Typography>\n                  <Typography variant=\"subtitle2\" noWrap>\n                    this month\n                  </Typography>\n                </Box>\n              </Box> */}\n            </Box>\n            {/* <Grid container spacing={3}>\n              <Grid sm item>\n                <Button fullWidth variant=\"outlined\">\n                  Send\n                </Button>\n              </Grid>\n              <Grid sm item>\n                <Button fullWidth variant=\"contained\">\n                  Receive\n                </Button>\n              </Grid>\n            </Grid> */}\n          </Box>\n        </Grid>\n        {/* <Grid\n          sx={{\n            position: 'relative'\n          }}\n          display=\"flex\"\n          alignItems=\"center\"\n          item\n          xs={12}\n          md={6}\n        >\n          <Box\n            component=\"span\"\n            sx={{\n              display: { xs: 'none', md: 'inline-block' }\n            }}\n          >\n            <Divider absolute orientation=\"vertical\" />\n          </Box>\n          <Box py={4} pr={4} flex={1}>\n            <Grid container spacing={0}>\n              <Grid\n                xs={12}\n                sm={5}\n                item\n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n              >\n                <Chart\n                  height={250}\n                  options={chartOptions}\n                  series={chartSeries}\n                  type=\"donut\"\n                />\n              </Grid>\n              <Grid xs={12} sm={7} item display=\"flex\" alignItems=\"center\">\n                <List\n                  disablePadding\n                  sx={{\n                    width: '100%'\n                  }}\n                >\n                  {chartSeries.map((item, index) => (\n                    <ListItem disableGutters>\n                      <ListItemAvatarWrapper>\n                        <img\n                          alt=\"BTC\"\n                          src=\"/static/images/placeholders/logo/bitcoin.png\"\n                        />\n                      </ListItemAvatarWrapper>\n                      <ListItemText\n                        primary=\"BTC\"\n                        primaryTypographyProps={{ variant: 'h5', noWrap: true }}\n                        secondary=\"Bitcoin\"\n                        secondaryTypographyProps={{\n                          variant: 'subtitle2',\n                          noWrap: true\n                        }}\n                      />\n                      <Box>\n                        <Typography align=\"right\" variant=\"h4\" noWrap>\n                          20%\n                        </Typography>\n                        <span color=\"success\">+2.54%</span>\n                      </Box>\n                    </ListItem>\n                  ))}\n                </List>\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid> */}\n      </Grid>\n    </Card>\n  );\n};\n\nexport default AccountBalance;\n","import { Helmet } from 'react-helmet-async';\nimport PageHeader from './PageHeader';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport { Container, Grid } from '@mui/material';\nimport Footer from 'src/components/Footer';\n\nimport AccountBalance from './AccountBalance';\nimport Wallets from './Wallets';\nimport AccountSecurity from './AccountSecurity';\nimport WatchList from './WatchList';\n\nconst Dashboard = (): JSX.Element => (\n  <>\n    <Helmet>\n      <title>Dashboard</title>\n    </Helmet>\n    <PageTitleWrapper>\n      <PageHeader />\n    </PageTitleWrapper>\n    <Container maxWidth=\"lg\">\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        spacing={4}\n      >\n        <Grid item xs={12}>\n          <AccountBalance />\n        </Grid>\n        {/* <Grid item lg={8} xs={12}>\n          <Wallets />\n        </Grid> */}\n        {/* <Grid item lg={4} xs={12}>\n          <AccountSecurity />\n        </Grid> */}\n        {/* <Grid item xs={12}>\n          <WatchList />\n        </Grid> */}\n      </Grid>\n    </Container>\n    <Footer />\n  </>\n);\n\nexport default Dashboard;\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["FooterWrapper","styled","Container","_ref","theme","concat","spacing","_jsx","className","children","_jsxs","Box","pb","display","xs","md","alignItems","textAlign","justifyContent","Typography","variant","FormattedMessage","id","sx","pt","PageTitle","_ref2","maxWidth","data","useGetDashboardQuery","refetchOnMountOrArgChange","useTheme","Grid","container","item","Avatar","mr","width","height","alt","name","src","component","gutterBottom","type","colors","success","main","palette","contrastText","shadows","ListItemAvatar","mode","alpha","trueWhite","black","Card","p","balance","currency","code","fontWeight","color","_Fragment","Helmet","PageTitleWrapper","PageHeader","direction","AccountBalance","Footer","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","Paper","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","_props$raised","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","undefined"],"sourceRoot":""}