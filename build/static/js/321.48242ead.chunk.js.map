{"version":3,"file":"static/js/321.48242ead.chunk.js","mappings":"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","sources":["modules/managements/Games/index.tsx","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n// import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { useGetVendorsQuery } from 'src/services/vendorService';\n// import { TablePagination } from '@mui/material';\n\nexport default function Games(): JSX.Element {\n  // const [page, setPage] = React.useState(2);\n  // const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  // const handleChangePage = (\n  //     event: React.MouseEvent<HTMLButtonElement> | null,\n  //     newPage: number,\n  // ) => {\n  //     setPage(newPage);\n  // };\n\n  // const handleChangeRowsPerPage = (\n  //     event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  // ) => {\n  //     setRowsPerPage(parseInt(event.target.value, 10));\n  //     setPage(0);\n  // };\n  const { data, isError, error } = useGetVendorsQuery({\n    vendors: ['evolution']\n  });\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Dessert (100g serving)</TableCell>\n            <TableCell align=\"right\">Calories</TableCell>\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {(data as any[])?.map((row) => (\n            <TableRow\n              key={row.name}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.id}\n              </TableCell>\n              <TableCell align=\"right\">{row.title}</TableCell>\n              <TableCell align=\"right\">{row.fat}</TableCell>\n              <TableCell align=\"right\">{row.carbs}</TableCell>\n              <TableCell align=\"right\">{row.protein}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      {/* <TablePagination\n        component=\"div\"\n        count={100}\n        page={page}\n        onPageChange={handleChangePage}\n        rowsPerPage={rowsPerPage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        /> */}\n    </TableContainer>\n  );\n}\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;"],"names":["Games","_useGetVendorsQuery","useGetVendorsQuery","vendors","data","isError","error","_jsx","TableContainer","component","Paper","children","_jsxs","Table","sx","minWidth","TableHead","TableRow","TableCell","align","TableBody","map","row","border","scope","id","title","fat","carbs","protein","name","getTableHeadUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableHeadRoot","styled","overridesResolver","props","styles","root","display","tablelvl2","variant","defaultComponent","React","inProps","ref","useThemeProps","className","_props$component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","Tablelvl2Context","Provider","value","as","clsx","role"],"sourceRoot":""}