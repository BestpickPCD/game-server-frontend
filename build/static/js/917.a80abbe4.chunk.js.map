{"version":3,"file":"static/js/917.a80abbe4.chunk.js","mappings":"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","sources":["modules/Auth/Register/FormRegister.tsx","modules/managements/Users/UserModal.tsx","modules/managements/Users/UserTable.tsx","modules/managements/Users/index.tsx"],"sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\nimport { LoadingButton } from '@mui/lab';\nimport { Box, Grid, TextField } from '@mui/material';\nimport { useEffect, useMemo } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FormattedMessage } from 'react-intl';\nimport { useNavigate } from 'react-router';\nimport { Select } from 'src/components/MUIComponents';\nimport { InfinityAgent } from 'src/components/MUIComponents/InfinitySelect';\nimport { useRegisterMutation } from 'src/services/authService';\nimport { useRolesQuery } from 'src/services/commonServices';\nimport { useToast } from 'src/utils/hooks';\nimport * as yup from 'yup';\n\nconst schema = yup.object().shape({\n  username: yup\n    .string()\n    .trim('Username no space')\n    .matches(/[a-zA-Z]/, 'Username can only contain letters.')\n    .required('Username is required'),\n  name: yup\n    .string()\n    .matches(/[a-zA-Z]/, 'Name can only contain letters.')\n    .required('First name is required'),\n  type: yup.string().nullable(),\n  rate: yup.number().positive().moreThan(0, 'Rate is required').nullable(),\n  roleId: yup.number().positive().moreThan(0, 'Role is required').nullable(),\n  parentAgentId: yup.string().required('Parent Agent is required'),\n  email: yup\n    .string()\n    .email('Invalid email format')\n    .required('First name is required'),\n  password: yup\n    .string()\n    .min(8, 'Password is too short - should be 8 chars minimum.')\n    .matches(\n      /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[\\W_]).+$/,\n      'Password contains characters, numbers and at least one special character'\n    )\n    .required('Password is required'),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\n    .required('Password is required')\n});\ninterface FormRegisterProps {\n  isUserRegister?: boolean;\n  isAgentRegister?: boolean;\n  isSubmit?: boolean;\n  setIsSubmit?: () => void;\n  refetch?: () => void;\n  onClose?: () => void;\n}\nconst FormRegister = ({\n  isUserRegister = false,\n  isAgentRegister = false,\n  isSubmit = false,\n  setIsSubmit,\n  refetch,\n  onClose\n}: FormRegisterProps): JSX.Element => {\n  const [onRegister, { isLoading }] = useRegisterMutation();\n\n  const { notify, message } = useToast();\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    control,\n    setValue,\n    formState: { errors }\n  } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: {\n      name: '',\n      rate: isUserRegister ? null : 0,\n      email: '',\n      username: '',\n      parentAgentId: isUserRegister ? null : '',\n      type: isUserRegister ? 'player' : 'agent',\n      roleId: isUserRegister ? 2 : 0,\n      password: '',\n      confirmPassword: ''\n    }\n  });\n\n  useEffect(() => {\n    if (isSubmit) {\n      handleSubmit(onSubmit)();\n      isSubmit && setIsSubmit();\n    }\n  }, [isSubmit]);\n\n  const { data: rolesData } = useRolesQuery(\n    {},\n    { refetchOnMountOrArgChange: true }\n  );\n\n  const roleOptions = useMemo(\n    () =>\n      rolesData?.data?.map((role) => ({\n        id: role.id,\n        name: role.name,\n        value: role.id\n      })),\n    [rolesData]\n  );\n\n  const onSubmit = async (values) => {\n    try {\n      const response = await onRegister(values).unwrap();\n      if (response && response.message === 'CREATED') {\n        reset();\n        notify({ message: 'Registered Successfully' });\n        if (!isUserRegister && !isAgentRegister) {\n          navigate('/login');\n        } else {\n          refetch();\n          onClose();\n        }\n      }\n    } catch (error) {\n      if (error.data.message === 'DUPLICATE') {\n        return notify({\n          message: 'Duplicated username or email',\n          type: 'error'\n        });\n      }\n      return notify({ message: message.ERROR, type: 'error' });\n    }\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      noValidate\n      onSubmit={handleSubmit(onSubmit)}\n      sx={{ mt: 1 }}\n    >\n      <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n        <Grid item xs={12}>\n          <TextField\n            required\n            fullWidth\n            label=\"Name\"\n            autoFocus\n            error={!!errors['name']}\n            helperText={errors['name'] ? errors['name'].message : ''}\n            {...register('name')}\n            onBlur={(e) => setValue('name', e.target.value.trim())}\n          />\n        </Grid>\n\n        <Grid item xs={12} marginY={1}>\n          <Grid container columnSpacing={{ xs: 1 }} rowSpacing={2}>\n            <Grid item xs={!isUserRegister ? 8 : 12}>\n              <InfinityAgent\n                control={control}\n                name=\"parentAgentId\"\n                errors={errors}\n              />\n            </Grid>\n            {!isUserRegister && (\n              <Grid item xs={4}>\n                <TextField\n                  required\n                  fullWidth\n                  label=\"Rate\"\n                  autoFocus\n                  error={!!errors['rate']}\n                  helperText={errors['rate'] ? errors['rate'].message : ''}\n                  {...register('rate')}\n                  onBlur={(e) =>\n                    setValue('rate', parseFloat(e.target.value.trim()))\n                  }\n                />\n              </Grid>\n            )}\n          </Grid>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Grid container columnSpacing={{ xs: 1 }} rowSpacing={2}>\n            <Grid item xs={!isUserRegister ? 8 : 12}>\n              <TextField\n                required\n                fullWidth\n                label=\"Email\"\n                type=\"email\"\n                error={!!errors['email']}\n                helperText={errors['email'] ? errors['email'].message : ''}\n                {...register('email')}\n                onBlur={(e) => setValue('email', e.target.value.trim())}\n              />\n            </Grid>\n            {!isUserRegister && (\n              <Grid item xs={4}>\n                <Select\n                  label=\"Role\"\n                  name=\"roleId\"\n                  options={roleOptions}\n                  errors={errors}\n                  control={control}\n                />\n              </Grid>\n            )}\n          </Grid>\n        </Grid>\n\n        <Grid item xs={12}>\n          <TextField\n            required\n            fullWidth\n            label={<FormattedMessage id=\"label.username\" />}\n            sx={{ my: 1 }}\n            error={!!errors['username']}\n            helperText={errors['username'] ? errors['username'].message : ''}\n            {...register('username')}\n            onBlur={(e) => setValue('username', e.target.value.trim())}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container columnSpacing={{ xs: 1 }}>\n            <Grid item xs={6}>\n              <TextField\n                required\n                fullWidth\n                label=\"Password\"\n                type=\"password\"\n                error={!!errors['password']}\n                helperText={\n                  errors['password'] ? errors['password'].message : ''\n                }\n                {...register('password')}\n                onBlur={(e) => setValue('password', e.target.value.trim())}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                required\n                fullWidth\n                label=\"Confirm Password\"\n                type=\"password\"\n                error={!!errors['confirmPassword']}\n                helperText={\n                  errors['confirmPassword']\n                    ? errors['confirmPassword'].message\n                    : ''\n                }\n                {...register('confirmPassword')}\n                onBlur={(e) =>\n                  setValue('confirmPassword', e.target.value.trim())\n                }\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      {!isUserRegister && !isAgentRegister && (\n        <LoadingButton\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n          loading={isLoading}\n        >\n          Sign Up\n        </LoadingButton>\n      )}\n    </Box>\n  );\n};\n\nexport default FormRegister;\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { Box, FormControlLabel, Grid, Stack, Switch } from '@mui/material';\nimport { memo, useEffect, useMemo, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FormattedMessage } from 'react-intl';\nimport { Select, TextField } from 'src/components/MUIComponents';\nimport { InfinityAgent } from 'src/components/MUIComponents/InfinitySelect';\nimport Modals from 'src/components/Modals';\nimport { User } from 'src/models';\nimport FormRegister from 'src/modules/Auth/Register/FormRegister';\nimport { useRolesQuery } from 'src/services/commonServices';\nimport { useGetCurrenciesQuery } from 'src/services/currencyService';\nimport { useUpdateUserMutation } from 'src/services/userService';\nimport { useToast } from 'src/utils/hooks';\nimport * as yup from 'yup';\ninterface UserModals {\n  open: boolean;\n  detail: User;\n  onClose: () => void;\n  refetch: () => void;\n  hide: () => void;\n}\n\nconst schema = yup.object().shape({\n  name: yup.string().required('Last name is required!'),\n  email: yup.string().required('Email is required!'),\n  roleId: yup.number(),\n  currencyId: yup.number().required('Currency is required!'),\n  isActive: yup.boolean(),\n  username: yup.string().required('Username is required!'),\n  parentAgentId: yup.string().nullable()\n});\n\nconst UserModal = ({\n  open,\n  detail,\n  onClose,\n  refetch,\n  hide\n}: UserModals): JSX.Element => {\n  const { notify, message } = useToast();\n  const [isRegister, setIsRegister] = useState<boolean>(false);\n  const [updateUser, { isLoading: isLoadingUpdate }] = useUpdateUserMutation();\n\n  const { data: rolesData } = useRolesQuery(\n    {},\n    { refetchOnMountOrArgChange: true, skip: !detail?.id }\n  );\n  const { data: currenciesData } = useGetCurrenciesQuery(\n    {},\n    { refetchOnMountOrArgChange: true, skip: !detail?.id }\n  );\n\n  const {\n    register,\n    setValue,\n    reset,\n    handleSubmit,\n    control,\n    formState: { errors }\n  } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: {\n      name: '',\n      email: '',\n      roleId: 2,\n      username: '',\n      isActive: false,\n      currencyId: 0,\n      parentAgentId: ''\n    }\n  });\n\n  useEffect(() => {\n    if (detail?.id) {\n      setValue('name', detail.name);\n      setValue('username', detail.username);\n      setValue('email', detail.email);\n      setValue('isActive', detail.isActive);\n      setValue('roleId', detail?.role?.id);\n      setValue('currencyId', detail?.currency?.id);\n      setValue('parentAgentId', detail?.parentAgentId);\n    } else {\n      reset();\n    }\n  }, [detail]);\n\n  const onSubmit = async (values: {\n    name: string;\n    email: string;\n    type: string;\n    roleId: number;\n    isActive: boolean;\n    currencyId: number;\n    parentAgentId: string | null;\n  }) => {\n    try {\n      if (detail?.id) {\n        await updateUser({\n          id: detail.id,\n          body: {\n            name: values.name,\n            email: values.email,\n            roleId: values.roleId,\n            isActive: values.isActive,\n            currencyId: values.currencyId,\n            parentAgentId: values.parentAgentId\n          }\n        }).unwrap();\n        notify({ message: message.UPDATED });\n      }\n      refetch();\n      hide();\n      reset();\n    } catch (error) {\n      notify({ message: message.ERROR, type: 'error' });\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const checked = event.target.checked;\n    setValue('isActive', checked);\n  };\n\n  const roleOptions = useMemo(\n    () =>\n      rolesData?.data?.map((role) => ({\n        id: role.id,\n        name: role.name,\n        value: role.id\n      })),\n    [rolesData]\n  );\n\n  const currencyOptions = useMemo(\n    () =>\n      currenciesData?.map((role) => ({\n        id: role.id,\n        name: role.name,\n        value: role.id\n      })),\n    [currenciesData]\n  );\n\n  return (\n    <Modals\n      title={detail?.id ? `Edit ${detail.name}` : 'Add User'}\n      onClose={onClose}\n      open={open}\n      isLoading={isLoadingUpdate}\n      onOk={detail?.id ? handleSubmit(onSubmit) : () => setIsRegister(true)}\n    >\n      {detail?.id ? (\n        <Box component={'form'} id=\"form-users\">\n          <div className=\"block\">\n            <Grid container spacing={2} mt={1}>\n              <Grid item xs={8}>\n                <TextField\n                  label={<FormattedMessage id=\"label.username\" />}\n                  name=\"username\"\n                  errors={errors}\n                  register={register}\n                  disabled={detail?.id ? true : false}\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <Stack spacing={2} justifyContent=\"center\" alignItems=\"center\">\n                  <FormControlLabel\n                    label=\"Active\"\n                    control={\n                      <Switch\n                        name={'isActive'}\n                        defaultChecked={detail?.isActive ? true : false}\n                        onChange={handleChange}\n                      />\n                    }\n                  />\n                </Stack>\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label={<FormattedMessage id=\"label.name\" />}\n                  name=\"name\"\n                  errors={errors}\n                  register={register}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  label=\"Email\"\n                  name={'email'}\n                  errors={errors}\n                  register={register}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <InfinityAgent\n                  control={control}\n                  name=\"parentAgentId\"\n                  errors={errors}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <Box display={'flex'} gap=\"1rem\">\n                  <Select\n                    label=\"Currency\"\n                    name=\"currencyId\"\n                    control={control}\n                    options={currencyOptions}\n                  />\n                </Box>\n              </Grid>\n            </Grid>\n          </div>\n        </Box>\n      ) : (\n        <FormRegister\n          isUserRegister={true}\n          isSubmit={isRegister}\n          setIsSubmit={() => setIsRegister(false)}\n          refetch={refetch}\n          onClose={onClose}\n        />\n      )}\n    </Modals>\n  );\n};\n\nexport default memo(UserModal);\n","import { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Typography\r\n} from '@mui/material';\r\nimport { format, parseISO } from 'date-fns';\r\nimport { TableBody, TableHeader } from 'src/components/Table/tableType';\r\nimport { ReactNode, useState } from 'react';\r\nimport PaidOutlinedIcon from '@mui/icons-material/PaidOutlined';\r\nimport { useModal } from 'src/utils/hooks';\r\nimport { User } from 'src/models';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\ninterface UserTableProps {\r\n  tableHeader: TableHeader[];\r\n  tableBody: (item) => TableBody[];\r\n  tableFilter: ({ status, dateFrom, dateTo }) => ReactNode[];\r\n  visible: boolean;\r\n  toggle: () => void;\r\n  user: User;\r\n}\r\ninterface TableFilterProps {\r\n  status: {\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n  };\r\n  dateFrom: {\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n  };\r\n  dateTo: {\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n  };\r\n}\r\nconst UserTable = (): UserTableProps => {\r\n  const { visible, toggle } = useModal();\r\n  const [user, setUser] = useState<User>();\r\n\r\n  const onClickButton = (user) => {\r\n    setUser(user);\r\n    toggle();\r\n  };\r\n\r\n  const onCalculate = (item) =>\r\n    Math.abs(\r\n      Object.keys(item?.balances)\r\n        .filter(\r\n          (item) =>\r\n            item === 'deposit' ||\r\n            item === 'withdraw' ||\r\n            item === 'user.add_balance'\r\n        )\r\n        .reduce((acc: number, cur: string) => acc + item.balances[cur] * -1, 0)\r\n    );\r\n\r\n  const tableBody = (item): TableBody[] => [\r\n    {\r\n      align: 'inherit',\r\n      children: (\r\n        <>\r\n          <Typography\r\n            variant=\"body1\"\r\n            fontWeight=\"bold\"\r\n            color=\"text.primary\"\r\n            noWrap\r\n          >\r\n            {item.name}\r\n          </Typography>\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      align: 'inherit',\r\n      children: (\r\n        <>\r\n          <Typography\r\n            variant=\"body1\"\r\n            fontWeight=\"bold\"\r\n            color=\"text.primary\"\r\n            noWrap\r\n          >\r\n            {item.agentName}\r\n          </Typography>\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      align: 'inherit',\r\n      children: (\r\n        <>\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<PaidOutlinedIcon />}\r\n            href={`transactions/${item.id}`}\r\n          >\r\n            {item.balance}\r\n          </Button>\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      align: 'inherit',\r\n      children: (\r\n        <>\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<PaidOutlinedIcon />}\r\n            href={`transactions/${item.id}/betting-history`}\r\n          >\r\n            {(item?.balances?.win ?? 0) +\r\n              (item?.balances?.bet ?? 0) +\r\n              (item?.balances?.cancel ?? 0) ?? 0}\r\n          </Button>\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      align: 'inherit',\r\n      children: (\r\n        <>\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<PaidOutlinedIcon />}\r\n            href={`transactions/${item.id}/recharge-history`}\r\n          >\r\n            {item?.balances && onCalculate(item)}\r\n          </Button>\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      align: 'right',\r\n      children: (\r\n        <>\r\n          <Badge\r\n            badgeContent={item?.isActive ? 'Active' : 'Locked'}\r\n            color={item?.isActive ? 'success' : 'secondary'}\r\n            sx={{ padding: 1 }}\r\n          >\r\n            <Typography\r\n              variant=\"body1\"\r\n              fontWeight=\"bold\"\r\n              color=\"text.primary\"\r\n              noWrap\r\n            >\r\n              {item.username}\r\n            </Typography>\r\n          </Badge>\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      align: 'right',\r\n      children: (\r\n        <>\r\n          <Typography\r\n            variant=\"body1\"\r\n            fontWeight=\"bold\"\r\n            color=\"text.primary\"\r\n            noWrap\r\n          >\r\n            {item?.loggedIn &&\r\n              format(parseISO(item?.loggedIn), 'dd/MM/yyyy HH:mm')}\r\n          </Typography>\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      align: 'center',\r\n      children: (\r\n        <>\r\n          <Button\r\n            disabled={\r\n              JSON.parse(localStorage.getItem('user'))?.id != item.agentId\r\n            }\r\n            variant=\"outlined\"\r\n            startIcon={<PaidOutlinedIcon />}\r\n            onClick={() => onClickButton(item)}\r\n          >\r\n            Payment\r\n          </Button>\r\n        </>\r\n      )\r\n    }\r\n  ];\r\n  const tableHeader: TableHeader[] = [\r\n    {\r\n      align: 'inherit',\r\n      title: 'label.name',\r\n      name: 'name'\r\n    },\r\n    {\r\n      align: 'inherit',\r\n      title: 'label.affiliated-agent',\r\n      name: 'name'\r\n    },\r\n    {\r\n      align: 'inherit',\r\n      title: 'label.balance',\r\n      name: 'balance'\r\n    },\r\n    {\r\n      align: 'inherit',\r\n      title: 'label.betting',\r\n      name: 'totalBettingAmount'\r\n    },\r\n    {\r\n      align: 'inherit',\r\n      title: 'label.recharge',\r\n      name: 'totalBettingAmount'\r\n    },\r\n    {\r\n      align: 'right',\r\n      title: 'label.username',\r\n      name: 'username'\r\n    },\r\n    {\r\n      align: 'right',\r\n      title: 'label.loggedin',\r\n      name: 'updatedAt'\r\n    },\r\n    {\r\n      align: 'center',\r\n      title: 'title.managements',\r\n      name: 'management'\r\n    },\r\n    {\r\n      align: 'right',\r\n      title: 'label.actions'\r\n    }\r\n  ];\r\n  const tableFilter = ({ status, dateFrom, dateTo }: TableFilterProps) => [\r\n    <DatePicker\r\n      label={<FormattedMessage id=\"label.from\" />}\r\n      // value={dateFrom.value ?? null}\r\n      onChange={dateFrom.onChange}\r\n    />,\r\n    <DatePicker\r\n      label={<FormattedMessage id=\"label.to\" />}\r\n      // value={dateTo.value ?? null}\r\n      onChange={dateTo.onChange}\r\n    />,\r\n    <FormControl sx={{ m: 1, minWidth: 120 }}>\r\n      <InputLabel id=\"isActive\">\r\n        <FormattedMessage id=\"label.status\" />\r\n      </InputLabel>\r\n      <Select\r\n        labelId=\"isActive\"\r\n        value={status.value}\r\n        label={<FormattedMessage id=\"label.status\" />}\r\n        onChange={(e) => status.onChange(e.target.value)}\r\n      >\r\n        <MenuItem value=\"\">\r\n          <em>\r\n            <FormattedMessage id=\"label.default\" />\r\n          </em>\r\n        </MenuItem>\r\n        <MenuItem value=\"active\">\r\n          <FormattedMessage id=\"label.active\" />\r\n        </MenuItem>\r\n        <MenuItem value=\"disable\">\r\n          <FormattedMessage id=\"label.disable\" />\r\n        </MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  ];\r\n\r\n  return { tableBody, tableHeader, tableFilter, visible, toggle, user };\r\n};\r\n\r\nexport default UserTable;\r\n","import { useEffect, useState } from 'react';\nimport TableComponent from 'src/components/Table';\nimport {\n  useDeleteUserMutation,\n  useGetUserByIdMutation\n} from 'src/services/userService';\nimport { useGetUsersQuery } from 'src/services/userService';\nimport { useModal, useToast } from 'src/utils/hooks';\nimport { useForm } from 'react-hook-form';\nimport UserModal from './UserModal';\nimport UserTable from './UserTable';\nimport { PaginationAndSort } from 'src/components/Table/tableType';\nimport { formatToISOString, onSortTable } from 'src/utils';\nimport { User } from 'src/models';\nimport { Box, Dialog, Grid, TextField, Typography } from '@mui/material';\nimport { useCreateTransactionMutation } from 'src/services/transactionService';\nimport { LoadingButton } from '@mui/lab';\nimport { useSelector } from 'react-redux';\nimport { RootState } from 'src/app/store';\n\ninterface UsersPagination extends PaginationAndSort {\n  status: string;\n  dateFrom: string;\n  dateTo: string;\n  isSubmit?: boolean;\n  setIsSubmit?: () => void;\n}\n\nconst title = 'title.users-management';\nconst UsersManagement = (): JSX.Element => {\n  const breadcrumbs = [\n    {\n      link: '/dashboards',\n      name: 'title.dashboard'\n    },\n    {\n      name: title\n    }\n  ];\n  const { visible, hide, show } = useModal();\n  const { notify, message } = useToast();\n  const { reset } = useForm();\n  const {\n    tableBody,\n    tableHeader,\n    tableFilter,\n    visible: visibleTransaction,\n    toggle: toggleTransaction,\n    user\n  } = UserTable();\n\n  const [formData, setFormData] = useState({\n    userId: '',\n    amount: 0,\n    type: 'user.add_balance',\n    note: '',\n    status: 'pending'\n  });\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const [data, setData] = useState<any[]>([]);\n  const [detail, setDetail] = useState<User>();\n  const [pagination, setPagination] = useState<UsersPagination>({\n    page: 0,\n    size: 10,\n    totalPage: 1,\n    totalItems: 10,\n    sortBy: -1,\n    search: '',\n    sortDirection: 'asc',\n    status: '',\n    dateFrom: '',\n    dateTo: ''\n  });\n\n  const [getUserDetail] = useGetUserByIdMutation();\n  const [deleteUser, { isLoading: isLoadingDelete }] = useDeleteUserMutation();\n  const [createTransaction, { isLoading: isLoadingCreate }] =\n    useCreateTransactionMutation();\n\n  const checkPermission = (permissionArray: string[], permission: string) =>\n    permissionArray?.includes(permission);\n  const { permissions } = useSelector((state: RootState) => state.common);\n\n  const {\n    data: userData,\n    isFetching,\n    refetch\n  } = useGetUsersQuery(\n    {\n      page: pagination.page,\n      size: pagination.size,\n      search: pagination.search,\n      dateFrom: pagination.dateFrom,\n      dateTo: pagination.dateTo\n    },\n    { refetchOnMountOrArgChange: true }\n  );\n\n  useEffect(() => {\n    if (userData) {\n      setData(() =>\n        onSortTable(\n          userData.data.data,\n          tableHeader[pagination.sortBy]?.name,\n          pagination.sortDirection\n        )\n      );\n    }\n  }, [userData, pagination.sortBy, pagination.sortDirection]);\n\n  useEffect(() => {\n    user &&\n      setFormData((prev) => ({\n        ...prev,\n        userId: user?.id,\n        amount: Number(prev.amount)\n      }));\n  }, [user]);\n\n  const onAdd = () => {\n    show();\n    setDetail(null);\n  };\n\n  const onDelete = async (value: string) => {\n    try {\n      await deleteUser(value).unwrap();\n      notify({ message: message.DELETED });\n      refetch();\n    } catch (error) {\n      notify({ message: error?.data?.message || message.ERROR, type: 'error' });\n    }\n  };\n\n  const onUpdate = async (value: string) => {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const response = await getUserDetail(value).unwrap();\n      show();\n      setDetail(response.data);\n    } catch (error) {\n      notify({ message: message.ERROR, type: 'error' });\n    }\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const response = await createTransaction(formData).unwrap();\n      if (response) {\n        toggleTransaction();\n        notify({ message: message.UPDATED });\n        refetch();\n        hide();\n        reset();\n      }\n    } catch (error) {\n      notify({ message: error?.data?.message || message.ERROR, type: 'error' });\n    }\n  };\n\n  const onInput = (value, inputName) => {\n    setFormData((prev) => ({ ...prev, [`${inputName}`]: value }));\n  };\n\n  return (\n    <>\n      <TableComponent\n        title={title}\n        data={data}\n        totalItems={userData?.data.totalItems}\n        tableHeader={tableHeader}\n        tableBody={tableBody}\n        headerTitle={title}\n        breadcrumbs={breadcrumbs}\n        isLoading={isFetching || isLoadingDelete}\n        onDelete={onDelete}\n        onUpdate={onUpdate}\n        pagination={pagination}\n        onPagination={setPagination}\n        onOpenModal={checkPermission(permissions, 'create') && onAdd}\n        tableFilter={tableFilter({\n          status: {\n            value: pagination.status,\n            onChange: (value) => setPagination({ ...pagination, status: value })\n          },\n          dateFrom: {\n            value: pagination.dateFrom,\n            onChange: (value) =>\n              setPagination({\n                ...pagination,\n                dateFrom: formatToISOString(value, 'from')\n              })\n          },\n          dateTo: {\n            value: pagination.dateTo,\n            onChange: (value) =>\n              setPagination({\n                ...pagination,\n                dateTo: formatToISOString(value, 'to')\n              })\n          }\n        })}\n      />\n      <UserModal\n        open={visible}\n        detail={detail}\n        onClose={hide}\n        refetch={refetch}\n        hide={hide}\n      />\n      <Dialog open={visibleTransaction} onClose={toggleTransaction}>\n        <Box component=\"form\" padding={2} width=\"400px\">\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\n            Add transaction\n          </Typography>\n          <Box display=\"flex\" alignItems=\"center\" width=\"100%\" gap={2} pt={2}>\n            <TextField\n              label=\"Insert the amount here\"\n              variant=\"outlined\"\n              fullWidth\n              onInput={(event) =>\n                onInput(\n                  Number((event.target as HTMLInputElement).value),\n                  'amount'\n                )\n              }\n            />\n            <LoadingButton\n              loading={isLoadingCreate}\n              onClick={handleSubmit}\n              size=\"large\"\n              variant=\"contained\"\n            >\n              <Typography whiteSpace=\"nowrap\">+ Add</Typography>\n            </LoadingButton>\n          </Box>\n        </Box>\n      </Dialog>\n    </>\n  );\n};\n\nexport default UsersManagement;\n"],"names":["schema","yup","shape","username","trim","matches","required","name","type","nullable","rate","positive","moreThan","roleId","parentAgentId","email","password","min","confirmPassword","oneOf","_ref","_ref$isUserRegister","isUserRegister","_ref$isAgentRegister","isAgentRegister","_ref$isSubmit","isSubmit","setIsSubmit","refetch","onClose","_useRegisterMutation","useRegisterMutation","_useRegisterMutation2","_slicedToArray","onRegister","isLoading","_useToast","useToast","notify","message","navigate","useNavigate","_useForm","useForm","resolver","yupResolver","defaultValues","register","handleSubmit","reset","control","setValue","errors","formState","useEffect","onSubmit","rolesData","useRolesQuery","refetchOnMountOrArgChange","data","roleOptions","useMemo","_rolesData$data","map","role","id","value","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","response","wrap","_context","prev","next","unwrap","sent","t0","abrupt","ERROR","stop","_x","apply","arguments","_jsxs","Box","component","noValidate","sx","mt","children","Grid","container","rowSpacing","columnSpacing","xs","sm","md","_jsx","item","TextField","_objectSpread","fullWidth","label","autoFocus","error","helperText","onBlur","e","target","marginY","InfinityAgent","parseFloat","Select","options","FormattedMessage","my","LoadingButton","variant","mb","loading","currencyId","isActive","UserModal","open","detail","hide","_useState","useState","_useState2","isRegister","setIsRegister","_useUpdateUserMutatio","useUpdateUserMutation","_useUpdateUserMutatio2","updateUser","isLoadingUpdate","skip","currenciesData","useGetCurrenciesQuery","_detail$role","_detail$currency","currency","body","UPDATED","currencyOptions","Modals","title","concat","onOk","className","spacing","disabled","Stack","justifyContent","alignItems","FormControlLabel","Switch","defaultChecked","onChange","event","checked","display","gap","FormRegister","memo","_useModal","useModal","visible","toggle","user","setUser","onCalculate","Math","abs","Object","keys","balances","filter","reduce","acc","cur","tableBody","_item$balances$win","_item$balances","_item$balances$bet","_item$balances2","_item$balances$cancel","_item$balances3","_JSON$parse","align","_Fragment","Typography","fontWeight","color","noWrap","agentName","Button","startIcon","PaidOutlinedIcon","href","balance","win","bet","cancel","Badge","badgeContent","padding","loggedIn","format","parseISO","JSON","parse","localStorage","getItem","agentId","onClick","onClickButton","tableHeader","tableFilter","status","dateFrom","dateTo","DatePicker","FormControl","m","minWidth","InputLabel","labelId","MenuItem","breadcrumbs","link","show","_UserTable","UserTable","visibleTransaction","toggleTransaction","userId","amount","note","formData","setFormData","_useState3","_useState4","setData","_useState5","_useState6","setDetail","_useState7","page","size","totalPage","totalItems","sortBy","search","sortDirection","_useState8","pagination","setPagination","_useGetUserByIdMutati","useGetUserByIdMutation","getUserDetail","_useDeleteUserMutatio","useDeleteUserMutation","_useDeleteUserMutatio2","deleteUser","isLoadingDelete","_useCreateTransaction","useCreateTransactionMutation","_useCreateTransaction2","createTransaction","isLoadingCreate","permissions","useSelector","state","common","_useGetUsersQuery","useGetUsersQuery","userData","isFetching","_tableHeader$paginati","onSortTable","Number","permissionArray","permission","onDelete","_error$data","DELETED","onUpdate","_callee2","_context2","_x2","_ref3","_callee3","_error$data2","_context3","TableComponent","headerTitle","onPagination","onOpenModal","includes","formatToISOString","Dialog","width","gutterBottom","pt","onInput","inputName","_defineProperty","whiteSpace"],"sourceRoot":""}