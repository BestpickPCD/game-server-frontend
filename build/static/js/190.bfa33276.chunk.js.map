{"version":3,"file":"static/js/190.bfa33276.chunk.js","mappings":"iQAKMA,EAAwB,CAC5B,CACEC,MAAO,WACPC,WAAY,WACZC,MAAO,KAET,CAAEF,MAAO,OAAQC,WAAY,OAAQC,MAAO,KAC5C,CACEF,MAAO,gBACPC,WAAY,iBACZC,MAAO,KAET,CAAEF,MAAO,SAAUC,WAAY,SAAUC,MAAO,KAChD,CAAEF,MAAO,SAAUC,WAAY,SAAUC,MAAO,IAAKC,KAAM,WAGzDC,EAAO,GACLC,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAI,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACZJ,EAAYD,EAAlBA,KACRP,EAAOQ,EAAQ,wBAAAE,EAAAG,OAAA,GAAAP,EAAA,KAChB,gBAHaQ,GAAA,OAAAZ,EAAAa,MAAA,KAAAC,UAAA,KAKC,SAASC,IACtB,IAEIC,EAFJC,GAAuBC,EAAAA,EAAAA,MAAfC,EAAIF,EAAJE,KAAMtB,EAAIoB,EAAJpB,KAIZmB,EADW,oBAATnB,EACU,iBACM,qBAATA,EACG,sDAEA,GAGd,IAAQQ,GAASe,EAAAA,EAAAA,IAA+B,CAC9CC,GAAIF,EACJtB,KAAK,SAADyB,OAAWN,KAFTX,KASR,OAJIA,GACFN,EAASM,IAITkB,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,GAAI,CAAEC,UAAW,GAAIC,UAC9BJ,EAAAA,EAAAA,KAACK,EAAAA,EAAI,CAAAD,UACHJ,EAAAA,EAAAA,KAACM,EAAS,CACR/B,KAAMA,EACNL,QAASA,EACTqC,aAAc,CACZC,WAAY,CACVC,gBAAiB,CAAEC,KAAM,EAAGC,SAAU,KAG1CC,gBAAiB,CAAC,EAAG,IACrBC,mBAAiB,OAK3B,CACA,IAAMP,GAAYQ,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,EAAiB,SAAAE,GAAQA,EAALC,MAAK,MAAQ,CACjD,0CAA2C,CACzC,qDAAsD,CACpDC,OAAQ,kBACRC,QAAS,oBAGb,4BAA6B,CAC3BA,QAAS,mBAEX,+BAAgC,CAC9BC,UAAW,QAEd,G","sources":["modules/managements/Transactions/Type/index.tsx"],"sourcesContent":["import { Card, Container, styled } from '@mui/material';\nimport { DataGrid, GridColDef } from '@mui/x-data-grid';\nimport { useParams } from 'react-router';\nimport { useGetUserTransactionByIdQuery } from 'src/services/transactionService';\n\nconst columns: GridColDef[] = [\n  {\n    field: 'username',\n    headerName: 'Username',\n    width: 200\n  },\n  { field: 'type', headerName: 'type', width: 200 },\n  {\n    field: 'agentUsername',\n    headerName: 'Agent Username',\n    width: 200\n  },\n  { field: 'status', headerName: 'status', width: 200 },\n  { field: 'amount', headerName: 'amount', width: 200, type: 'number' }\n];\n\nlet rows = [];\nconst showRows = async (data) => {\n  const { data: rowData } = data;\n  rows = rowData;\n};\n\nexport default function name(): JSX.Element {\n  const { slug, type } = useParams();\n\n  let typeParam;\n  if (type === 'betting-history') {\n    typeParam = 'bet,win,cancel';\n  } else if (type === 'recharge-history') {\n    typeParam = 'agent.add_balance,user.add_balance,deposit,withdraw';\n  } else {\n    typeParam = '';\n  }\n\n  const { data } = useGetUserTransactionByIdQuery({\n    id: slug,\n    type: `?type=${typeParam}`\n  });\n\n  if (data) {\n    showRows(data);\n  }\n\n  return (\n    <Container sx={{ marginTop: 4 }}>\n      <Card>\n        <DataTable\n          rows={rows}\n          columns={columns}\n          initialState={{\n            pagination: {\n              paginationModel: { page: 0, pageSize: 5 }\n            }\n          }}\n          pageSizeOptions={[5, 10]}\n          checkboxSelection\n        />\n      </Card>\n    </Container>\n  );\n}\nconst DataTable = styled(DataGrid)(({ theme }) => ({\n  '.MuiDataGrid-columnHeaderTitleContainer': {\n    '&:active, &:focus, &:focus-within, &:focus-visible': {\n      border: 'none !important',\n      outline: 'none !important'\n    }\n  },\n  '.MuiDataGrid-columnHeader': {\n    outline: 'none !important'\n  },\n  '.MuiDataGrid-virtualScroller': {\n    minHeight: '50px'\n  }\n}));\n"],"names":["columns","field","headerName","width","type","rows","showRows","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","rowData","wrap","_context","prev","next","stop","_x","apply","arguments","name","typeParam","_useParams","useParams","slug","useGetUserTransactionByIdQuery","id","concat","_jsx","Container","sx","marginTop","children","Card","DataTable","initialState","pagination","paginationModel","page","pageSize","pageSizeOptions","checkboxSelection","styled","DataGrid","_ref2","theme","border","outline","minHeight"],"sourceRoot":""}